// <auto-generated />
using System;
using LibraryManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryManagementSystemDbContext))]
    [Migration("20221102134759_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryManagement.Core.Entities.Book", b =>
                {
                    b.Property<int?>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("BookId"), 1L, 1);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("BookEdition")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BookEdition");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BookName");

                    b.Property<int>("Isbn")
                        .HasColumnType("int")
                        .HasColumnName("Isbn");

                    b.Property<int?>("StockAvailable")
                        .HasColumnType("int")
                        .HasColumnName("StockAvailable");

                    b.HasKey("BookId");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Department", b =>
                {
                    b.Property<short>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("DeptId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("DeptId"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentName");

                    b.HasKey("DeptId")
                        .HasName("PK__departme__BE2D26B6D0D236DC");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Designation", b =>
                {
                    b.Property<string>("DesignationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DesignationId");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DesignationName");

                    b.HasKey("DesignationId");

                    b.ToTable("designation", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Issue", b =>
                {
                    b.Property<short?>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("IssueId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short?>("IssueId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("BookId");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("ExpiryDate");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("IssueDate");

                    b.Property<string>("StaffId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("StaffId");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.HasKey("IssueId");

                    b.HasIndex("BookId");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("issue", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Penalty", b =>
                {
                    b.Property<int?>("PenaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PenaltyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PenaltyId"), 1L, 1);

                    b.Property<short?>("IssueId")
                        .HasColumnType("smallint")
                        .HasColumnName("IssueId");

                    b.Property<int?>("PenaltyAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PenaltyAmount")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PenaltyPaidStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("PenaltyPaidStatus")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("PenaltyId");

                    b.HasIndex("IssueId");

                    b.ToTable("penalty", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Return", b =>
                {
                    b.Property<int>("ReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReturnId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("BookId");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("ExpiryDate");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("IssueDate");

                    b.Property<short?>("IssueId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("ReturnDate");

                    b.HasKey("ReturnId");

                    b.HasIndex("BookId");

                    b.HasIndex("IssueId");

                    b.ToTable("return", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Staff", b =>
                {
                    b.Property<string>("StaffId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("StaffId");

                    b.Property<string>("DesignationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DesignationId");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Gender");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("StaffName");

                    b.HasKey("StaffId");

                    b.HasIndex("DesignationId");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<short>("DepartmentId")
                        .HasColumnType("smallint")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Gender");

                    b.Property<string>("StudentDepartment")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("StudentDepartment");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("StudentName");

                    b.HasKey("StudentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Issue", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Book", "Book")
                        .WithMany("Issues")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__issue__bookId__4222D4EF");

                    b.HasOne("LibraryManagement.Core.Entities.Staff", "Staff")
                        .WithMany("Issues")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__issue__staffId__02084FDA");

                    b.HasOne("LibraryManagement.Core.Entities.Student", "Student")
                        .WithMany("Issues")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__issue__studentId__01142BA1");

                    b.Navigation("Book");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Penalty", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Issue", "Issue")
                        .WithMany("Penalties")
                        .HasForeignKey("IssueId")
                        .HasConstraintName("FK__penalty__issueId__04E4BC85");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Return", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Book", "Book")
                        .WithMany("Returns")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__return__bookId__38996AB5");

                    b.HasOne("LibraryManagement.Core.Entities.Issue", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId")
                        .HasConstraintName("FK__return__IssueId__4F47C5E3");

                    b.Navigation("Book");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Staff", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Designation", "Designation")
                        .WithMany("staff")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK__staff__designati__70DDC3D8");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Student", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__student__departm__3F466844");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Book", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Designation", b =>
                {
                    b.Navigation("staff");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Issue", b =>
                {
                    b.Navigation("Penalties");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Staff", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Student", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
